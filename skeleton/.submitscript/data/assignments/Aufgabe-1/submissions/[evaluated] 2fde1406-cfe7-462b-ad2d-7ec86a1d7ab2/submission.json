{
    "authors": [
        {
            "first_name": "Najmi",
            "last_name": "Antariksa",
            "matriculation_number": "5311215"
        },
        {
            "first_name": "Hicham",
            "last_name": "Ahadriu",
            "matriculation_number": "5337972"
        }
    ],
    "evaluation_result": {
        "comment": null,
        "fixed": false,
        "log": "[2022-05-30 10:39:34.702488] Start of evaluation log for submission '2fde1406-cfe7-462b-ad2d-7ec86a1d7ab2'.\n[2022-05-30 10:39:34.702838] Team member: ('Antariksa', 'Najmi', '5311215')\n[2022-05-30 10:39:34.703039] Team member: ('Ahadriu', 'Hicham', '5337972')\n[2022-05-30 10:39:34.730709] Preparing the sandbox\n[2022-05-30 10:39:35.471113] Unpacking submission in sandbox\n[2022-05-30 10:39:35.907111] Building the test subject\n[2022-05-30 10:39:35.907456] Identified the C variant.\n[2022-05-30 10:39:36.055023] Preparing C solution for building with cmake\n[2022-05-30 10:39:36.994378] CMake log:\n-- The C compiler identification is GNU 9.4.0\n-- Check for working C compiler: /usr/bin/cc\n-- Check for working C compiler: /usr/bin/cc -- works\n-- Detecting C compiler ABI info\n-- Detecting C compiler ABI info - done\n-- Detecting C compile features\n-- Detecting C compile features - done\n-- Found BISON: /usr/bin/bison (found version \"3.5.1\") \n-- Found FLEX: /usr/bin/flex (found version \"2.6.4\") \n-- Configuring done\n-- Generating done\n-- Build files have been written to: /home/solution/c/build\n[2022-05-30 10:39:36.994472] Building C solution with make\n[2022-05-30 10:39:39.034806] Make log:\nScanning dependencies of target _generated_source_folder_dummy_target\n[  0%] Built target _generated_source_folder_dummy_target\n[  3%] [FLEX][SCANNER] Building scanner with flex 2.6.4\n[  6%] [BISON][PARSER] Building parser with bison 3.5.1\n/home/solution/c/src/phases/_02_03_parser/parser.y:85.22: warning: empty rule for typed nonterminal, and no action [-Wother]\n   85 | global_list         :\n      |                      ^\n/home/solution/c/src/phases/_02_03_parser/parser.y:86.23-44: warning: type clash on default action: <globalDeclarationList> != <globalDeclaration> [-Wother]\n   86 |                     | global_dec global_list\n      |                       ^~~~~~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:89.23-27: warning: type clash on default action: <typeExpression> != <identVal> [-Wother]\n   89 | type                : IDENT\n      |                       ^~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:90.23-56: warning: type clash on default action: <typeExpression> != <noVal> [-Wother]\n   90 |                     | ARRAY LBRACK INTLIT RBRACK OF type\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:95.23-45: warning: type clash on default action: <globalDeclaration> != <noVal> [-Wother]\n   95 | global_var          : TYPE type EQ type SEMIC\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:97.23-91: warning: type clash on default action: <globalDeclaration> != <noVal> [-Wother]\n   97 | proc_dec            : PROC IDENT LPAREN par_list RPAREN LCURL local_v...\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:99.22: warning: empty rule for typed nonterminal, and no action [-Wother]\n   99 | par_list            :\n      |                      ^\n/home/solution/c/src/phases/_02_03_parser/parser.y:102.23-29: warning: type clash on default action: <parameterList> != <parameterDeclaration> [-Wother]\n  102 | non_empty_par       : par_dec\n      |                       ^~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:103.23-49: warning: type clash on default action: <parameterList> != <parameterDeclaration> [-Wother]\n  103 |                     | par_dec COMMA non_empty_par\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:105.23-42: warning: type clash on default action: <parameterDeclaration> != <noVal> [-Wother]\n  105 | par_dec             : REF IDENT COLON type\n      |                       ^~~~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:106.23-38: warning: type clash on default action: <parameterDeclaration> != <identVal> [-Wother]\n  106 |                     | IDENT COLON type\n      |                       ^~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:109.22: warning: empty rule for typed nonterminal, and no action [-Wother]\n  109 | local_var_list      :\n      |                      ^\n/home/solution/c/src/phases/_02_03_parser/parser.y:110.23-50: warning: type clash on default action: <variableList> != <variableDeclaration> [-Wother]\n  110 |                     | local_var_dec local_var_list\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:112.23-51: warning: type clash on default action: <variableDeclaration> != <noVal> [-Wother]\n  112 | local_var_dec       : VAR variable COLON type SEMIC\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:115.22: warning: empty rule for typed nonterminal, and no action [-Wother]\n  115 | stm_list            :\n      |                      ^\n/home/solution/c/src/phases/_02_03_parser/parser.y:116.23-34: warning: type clash on default action: <statementList> != <statement> [-Wother]\n  116 |                     | stm stm_list\n      |                       ^~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:127.23-27: warning: type clash on default action: <statement> != <noVal> [-Wother]\n  127 | empty_stm           : SEMIC\n      |                       ^~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:129.23-42: warning: type clash on default action: <statement> != <noVal> [-Wother]\n  129 | compound_stm        : LCURL stm_list RCURL\n      |                       ^~~~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:131.23-60: warning: type clash on default action: <statement> != <noVal> [-Wother]\n  131 | if_stm              : IF LPAREN exp RPAREN stm  %prec \"then\"\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:132.23-55: warning: type clash on default action: <statement> != <noVal> [-Wother]\n  132 |                     | IF LPAREN exp RPAREN stm ELSE stm\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:134.23-49: warning: type clash on default action: <statement> != <noVal> [-Wother]\n  134 | while_stm           : WHILE LPAREN exp RPAREN stm\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:135.23-56: warning: type clash on default action: <statement> != <noVal> [-Wother]\n  135 |                     | DO stm WHILE LPAREN exp RPAREN stm\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:137.23-45: warning: type clash on default action: <statement> != <variable> [-Wother]\n  137 | assign_stm          : variable ASGN exp SEMIC\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:139.23-47: warning: type clash on default action: <statement> != <identVal> [-Wother]\n  139 | call_proc           : IDENT LPAREN RPAREN SEMIC\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:140.23-56: warning: type clash on default action: <statement> != <identVal> [-Wother]\n  140 |                     | IDENT LPAREN arg_list RPAREN SEMIC\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:143.23-25: warning: type clash on default action: <expressionList> != <expression> [-Wother]\n  143 | arg_list            : exp\n      |                       ^~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:144.23-40: warning: type clash on default action: <expressionList> != <expression> [-Wother]\n  144 |                     | exp COMMA arg_list\n      |                       ^~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:166.23-37: warning: type clash on default action: <expression> != <noVal> [-Wother]\n  166 |                     | MINUS unary_exp\n      |                       ^~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:168.23-28: warning: type clash on default action: <expression> != <intVal> [-Wother]\n  168 | primary_exp         : INTLIT\n      |                       ^~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:169.23-30: warning: type clash on default action: <expression> != <variable> [-Wother]\n  169 |                     | variable\n      |                       ^~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:170.23-43: warning: type clash on default action: <expression> != <noVal> [-Wother]\n  170 |                     | LPAREN rel_exp RPAREN\n      |                       ^~~~~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:177.23-27: warning: type clash on default action: <variable> != <identVal> [-Wother]\n  177 | variable            : IDENT\n      |                       ^~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:178.23-39: warning: type clash on default action: <variable> != <identVal> [-Wother]\n  178 |                     | IDENT array_index\n      |                       ^~~~~~~~~~~~~~~~~\nScanning dependencies of target spl\n[  6%] [BISON][PARSER] Building parser with bison 3.5.1\n/home/solution/c/src/phases/_02_03_parser/parser.y:85.22: warning: empty rule for typed nonterminal, and no action [-Wother]\n   85 | global_list         :\n      |                      ^\n/home/solution/c/src/phases/_02_03_parser/parser.y:86.23-44: warning: type clash on default action: <globalDeclarationList> != <globalDeclaration> [-Wother]\n   86 |                     | global_dec global_list\n      |                       ^~~~~~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:89.23-27: warning: type clash on default action: <typeExpression> != <identVal> [-Wother]\n   89 | type                : IDENT\n      |                       ^~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:90.23-56: warning: type clash on default action: <typeExpression> != <noVal> [-Wother]\n   90 |                     | ARRAY LBRACK INTLIT RBRACK OF type\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:95.23-45: warning: type clash on default action: <globalDeclaration> != <noVal> [-Wother]\n   95 | global_var          : TYPE type EQ type SEMIC\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:97.23-91: warning: type clash on default action: <globalDeclaration> != <noVal> [-Wother]\n   97 | proc_dec            : PROC IDENT LPAREN par_list RPAREN LCURL local_v...\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:99.22: warning: empty rule for typed nonterminal, and no action [-Wother]\n   99 | par_list            :\n      |                      ^\n/home/solution/c/src/phases/_02_03_parser/parser.y:102.23-29: warning: type clash on default action: <parameterList> != <parameterDeclaration> [-Wother]\n  102 | non_empty_par       : par_dec\n      |                       ^~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:103.23-49: warning: type clash on default action: <parameterList> != <parameterDeclaration> [-Wother]\n  103 |                     | par_dec COMMA non_empty_par\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:105.23-42: warning: type clash on default action: <parameterDeclaration> != <noVal> [-Wother]\n  105 | par_dec             : REF IDENT COLON type\n      |                       ^~~~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:106.23-38: warning: type clash on default action: <parameterDeclaration> != <identVal> [-Wother]\n  106 |                     | IDENT COLON type\n      |                       ^~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:109.22: warning: empty rule for typed nonterminal, and no action [-Wother]\n  109 | local_var_list      :\n      |                      ^\n/home/solution/c/src/phases/_02_03_parser/parser.y:110.23-50: warning: type clash on default action: <variableList> != <variableDeclaration> [-Wother]\n  110 |                     | local_var_dec local_var_list\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:112.23-51: warning: type clash on default action: <variableDeclaration> != <noVal> [-Wother]\n  112 | local_var_dec       : VAR variable COLON type SEMIC\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:115.22: warning: empty rule for typed nonterminal, and no action [-Wother]\n  115 | stm_list            :\n      |                      ^\n/home/solution/c/src/phases/_02_03_parser/parser.y:116.23-34: warning: type clash on default action: <statementList> != <statement> [-Wother]\n  116 |                     | stm stm_list\n      |                       ^~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:127.23-27: warning: type clash on default action: <statement> != <noVal> [-Wother]\n  127 | empty_stm           : SEMIC\n      |                       ^~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:129.23-42: warning: type clash on default action: <statement> != <noVal> [-Wother]\n  129 | compound_stm        : LCURL stm_list RCURL\n      |                       ^~~~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:131.23-60: warning: type clash on default action: <statement> != <noVal> [-Wother]\n  131 | if_stm              : IF LPAREN exp RPAREN stm  %prec \"then\"\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:132.23-55: warning: type clash on default action: <statement> != <noVal> [-Wother]\n  132 |                     | IF LPAREN exp RPAREN stm ELSE stm\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:134.23-49: warning: type clash on default action: <statement> != <noVal> [-Wother]\n  134 | while_stm           : WHILE LPAREN exp RPAREN stm\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:135.23-56: warning: type clash on default action: <statement> != <noVal> [-Wother]\n  135 |                     | DO stm WHILE LPAREN exp RPAREN stm\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:137.23-45: warning: type clash on default action: <statement> != <variable> [-Wother]\n  137 | assign_stm          : variable ASGN exp SEMIC\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:139.23-47: warning: type clash on default action: <statement> != <identVal> [-Wother]\n  139 | call_proc           : IDENT LPAREN RPAREN SEMIC\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:140.23-56: warning: type clash on default action: <statement> != <identVal> [-Wother]\n  140 |                     | IDENT LPAREN arg_list RPAREN SEMIC\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:143.23-25: warning: type clash on default action: <expressionList> != <expression> [-Wother]\n  143 | arg_list            : exp\n      |                       ^~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:144.23-40: warning: type clash on default action: <expressionList> != <expression> [-Wother]\n  144 |                     | exp COMMA arg_list\n      |                       ^~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:166.23-37: warning: type clash on default action: <expression> != <noVal> [-Wother]\n  166 |                     | MINUS unary_exp\n      |                       ^~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:168.23-28: warning: type clash on default action: <expression> != <intVal> [-Wother]\n  168 | primary_exp         : INTLIT\n      |                       ^~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:169.23-30: warning: type clash on default action: <expression> != <variable> [-Wother]\n  169 |                     | variable\n      |                       ^~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:170.23-43: warning: type clash on default action: <expression> != <noVal> [-Wother]\n  170 |                     | LPAREN rel_exp RPAREN\n      |                       ^~~~~~~~~~~~~~~~~~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:177.23-27: warning: type clash on default action: <variable> != <identVal> [-Wother]\n  177 | variable            : IDENT\n      |                       ^~~~~\n/home/solution/c/src/phases/_02_03_parser/parser.y:178.23-39: warning: type clash on default action: <variable> != <identVal> [-Wother]\n  178 |                     | IDENT array_index\n      |                       ^~~~~~~~~~~~~~~~~\n[  9%] Building C object CMakeFiles/spl.dir/generated-sources/phases/_02_03_parser/parser.c.o\n[  9%] [FLEX][SCANNER] Building scanner with flex 2.6.4\n[ 12%] Building C object CMakeFiles/spl.dir/generated-sources/phases/_01_scanner/scanner.c.o\n[ 15%] Building C object CMakeFiles/spl.dir/src/absyn/expressions.c.o\n/home/solution/c/src/absyn/expressions.c: In function 'isOperatorArithmetic':\n/home/solution/c/src/absyn/expressions.c:14:42: warning: unused parameter 'operator' [-Wunused-parameter]\n   14 | bool isOperatorArithmetic(BinaryOperator operator) {\n      |                           ~~~~~~~~~~~~~~~^~~~~~~~\n/home/solution/c/src/absyn/expressions.c: In function 'isOperatorComparison':\n/home/solution/c/src/absyn/expressions.c:18:42: warning: unused parameter 'operator' [-Wunused-parameter]\n   18 | bool isOperatorComparison(BinaryOperator operator) {\n      |                           ~~~~~~~~~~~~~~~^~~~~~~~\n/home/solution/c/src/absyn/expressions.c: In function 'flipComparisonOperator':\n/home/solution/c/src/absyn/expressions.c:22:54: warning: unused parameter 'operator' [-Wunused-parameter]\n   22 | BinaryOperator flipComparisonOperator(BinaryOperator operator) {\n      |                                       ~~~~~~~~~~~~~~~^~~~~~~~\n[ 18%] Building C object CMakeFiles/spl.dir/src/absyn/global_declarations.c.o\n[ 21%] Building C object CMakeFiles/spl.dir/src/absyn/lists.c.o\n[ 25%] Building C object CMakeFiles/spl.dir/src/absyn/parameter_declaration.c.o\n[ 28%] Building C object CMakeFiles/spl.dir/src/absyn/position.c.o\n[ 31%] Building C object CMakeFiles/spl.dir/src/absyn/program.c.o\n[ 34%] Building C object CMakeFiles/spl.dir/src/absyn/statements.c.o\n[ 37%] Building C object CMakeFiles/spl.dir/src/absyn/type_expressions.c.o\n[ 40%] Building C object CMakeFiles/spl.dir/src/absyn/variable_declaration.c.o\n[ 43%] Building C object CMakeFiles/spl.dir/src/absyn/variables.c.o\n[ 46%] Building C object CMakeFiles/spl.dir/src/absyn/printing/printing_helpers.c.o\n[ 50%] Building C object CMakeFiles/spl.dir/src/phases/_04a_tablebuild/tablebuild.c.o\n/home/solution/c/src/phases/_04a_tablebuild/tablebuild.c: In function 'buildSymbolTable':\n/home/solution/c/src/phases/_04a_tablebuild/tablebuild.c:28:40: warning: unused parameter 'program' [-Wunused-parameter]\n   28 | SymbolTable *buildSymbolTable(Program *program, bool showSymbolTables) {\n      |                               ~~~~~~~~~^~~~~~~\n/home/solution/c/src/phases/_04a_tablebuild/tablebuild.c:28:54: warning: unused parameter 'showSymbolTables' [-Wunused-parameter]\n   28 | SymbolTable *buildSymbolTable(Program *program, bool showSymbolTables) {\n      |                                                      ^\nAt top level:\n/home/solution/c/src/phases/_04a_tablebuild/tablebuild.c:22:13: warning: 'printSymbolTableAtEndOfProcedure' defined but not used [-Wunused-function]\n   22 | static void printSymbolTableAtEndOfProcedure(Identifier *name, Entry *procedureEntry) {\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n[ 53%] Building C object CMakeFiles/spl.dir/src/phases/_04b_semant/procedurebodycheck.c.o\n/home/solution/c/src/phases/_04b_semant/procedurebodycheck.c: In function 'checkProcedures':\n/home/solution/c/src/phases/_04b_semant/procedurebodycheck.c:12:31: warning: unused parameter 'program' [-Wunused-parameter]\n   12 | void checkProcedures(Program *program, SymbolTable *globalTable) {\n      |                      ~~~~~~~~~^~~~~~~\n/home/solution/c/src/phases/_04b_semant/procedurebodycheck.c:12:53: warning: unused parameter 'globalTable' [-Wunused-parameter]\n   12 | void checkProcedures(Program *program, SymbolTable *globalTable) {\n      |                                        ~~~~~~~~~~~~~^~~~~~~~~~~\n[ 56%] Building C object CMakeFiles/spl.dir/src/phases/_05_varalloc/varalloc.c.o\n/home/solution/c/src/phases/_05_varalloc/varalloc.c: In function 'allocVars':\n/home/solution/c/src/phases/_05_varalloc/varalloc.c:177:84: warning: unused parameter 'ershovOptimization' [-Wunused-parameter]\n  177 | void allocVars(Program *program, SymbolTable *globalTable, bool showVarAlloc, bool ershovOptimization) {\n      |                                                                                    ^\n[ 59%] Building C object CMakeFiles/spl.dir/src/phases/_05_varalloc/stack_layout.c.o\n[ 62%] Building C object CMakeFiles/spl.dir/src/phases/_06_codegen/codegen.c.o\n/home/solution/c/src/phases/_06_codegen/codegen.c: In function 'genCode':\n/home/solution/c/src/phases/_06_codegen/codegen.c:37:23: warning: unused parameter 'program' [-Wunused-parameter]\n   37 | void genCode(Program *program, SymbolTable *globalTable, FILE *out, bool ershovOptimization) {\n      |              ~~~~~~~~~^~~~~~~\n/home/solution/c/src/phases/_06_codegen/codegen.c:37:45: warning: unused parameter 'globalTable' [-Wunused-parameter]\n   37 | void genCode(Program *program, SymbolTable *globalTable, FILE *out, bool ershovOptimization) {\n      |                                ~~~~~~~~~~~~~^~~~~~~~~~~\n/home/solution/c/src/phases/_06_codegen/codegen.c:37:74: warning: unused parameter 'ershovOptimization' [-Wunused-parameter]\n   37 | void genCode(Program *program, SymbolTable *globalTable, FILE *out, bool ershovOptimization) {\n      |                                                                          ^\n[ 65%] Building C object CMakeFiles/spl.dir/src/phases/_06_codegen/codeprint.c.o\n[ 68%] Building C object CMakeFiles/spl.dir/src/main.c.o\n[ 71%] Building C object CMakeFiles/spl.dir/src/command_line_options.c.o\n[ 75%] Building C object CMakeFiles/spl.dir/src/table/identifier.c.o\n[ 78%] Building C object CMakeFiles/spl.dir/src/table/table.c.o\n[ 81%] Building C object CMakeFiles/spl.dir/src/table/entry.c.o\n[ 84%] Building C object CMakeFiles/spl.dir/src/types/types.c.o\n[ 87%] Building C object CMakeFiles/spl.dir/src/util/errors.c.o\n[ 90%] Building C object CMakeFiles/spl.dir/src/util/memory.c.o\n[ 93%] Building C object CMakeFiles/spl.dir/src/util/ascii_table.c.o\n[ 96%] Building C object CMakeFiles/spl.dir/src/util/string_ops.c.o\n[100%] Linking C executable spl\n[100%] Built target spl\n[2022-05-30 10:39:39.177683] Beginning evaluation.\n[2022-05-30 10:39:39.177931] Evaluating acker.spl with the submitted solution.\n[2022-05-30 10:39:39.319604] Test subject results match (Success).\n[2022-05-30 10:39:39.330215] Outputs differ. 'diff'-log (Expected output first, Limited to 50 lines/10000 characters):\n1,215c1\n< Program(\n<   ProcedureDeclaration(\n<     ackermann,\n<     Parameters(\n<       ParameterDeclaration(\n<         i,\n<         NamedTypeExpression(\n<           int),\n<         false),\n<       ParameterDeclaration(\n<         j,\n<         NamedTypeExpression(\n<           int),\n<         false),\n<       ParameterDeclaration(\n<         k,\n<         NamedTypeExpression(\n<           int),\n<         true)),\n<     Variables(\n<       VariableDeclaration(\n<         a,\n<         NamedTypeExpression(\n<           int))),\n<     Body(\n<       IfStatement(\n<         BinaryExpression(\n<           EQU,\n<           VariableExpression(\n<             NamedVariable(\n<               i)),\n<           IntLiteral(\n<             0)),\n<         CompoundStatement(\n<           AssignStatement(\n<             NamedVariable(\n<               k),\n<             BinaryExpression(\n<               ADD,\n<               VariableExpression(\n<                 NamedVariable(\n<                   j)),\n<               IntLiteral(\n<                 1)))),\n<         CompoundStatement(\n<           IfStatement(\n<             BinaryExpression(\n<               EQU,\n<               VariableExpression(\n[2022-05-30 10:39:39.332757] Test not passed.\n[2022-05-30 10:39:39.332787] Running Score: 0/1\n\n[2022-05-30 10:39:39.332816] Evaluating arrayasgn.spl with the submitted solution.\n[2022-05-30 10:39:39.477287] Test subject results match (Success).\n[2022-05-30 10:39:39.488313] Outputs differ. 'diff'-log (Expected output first, Limited to 50 lines/10000 characters):\n1,29c1\n< Program(\n<   TypeDeclaration(\n<     A,\n<     ArrayTypeExpression(\n<       NamedTypeExpression(\n<         int),\n<       10)),\n<   ProcedureDeclaration(\n<     main,\n<     Parameters(),\n<     Variables(\n<       VariableDeclaration(\n<         a,\n<         NamedTypeExpression(\n<           A)),\n<       VariableDeclaration(\n<         b,\n<         NamedTypeExpression(\n<           A))),\n<     Body(\n<       AssignStatement(\n<         NamedVariable(\n<           b),\n<         VariableExpression(\n<           NamedVariable(\n<             a))),\n<       CallStatement(\n<         exit,\n<         Arguments()))))\n---\n> NULL\n\\ No newline at end of file\n[2022-05-30 10:39:39.488986] Test not passed.\n[2022-05-30 10:39:39.489013] Running Score: 0/2\n\n[2022-05-30 10:39:39.489043] Evaluating arrayparm.spl with the submitted solution.\n[2022-05-30 10:39:39.629216] Test subject results match (Success).\n[2022-05-30 10:39:39.640739] Outputs differ. 'diff'-log (Expected output first, Limited to 50 lines/10000 characters):\n1,35c1\n< Program(\n<   TypeDeclaration(\n<     A,\n<     ArrayTypeExpression(\n<       NamedTypeExpression(\n<         int),\n<       10)),\n<   ProcedureDeclaration(\n<     p,\n<     Parameters(\n<       ParameterDeclaration(\n<         x,\n<         NamedTypeExpression(\n<           A),\n<         false)),\n<     Variables(),\n<     Body()),\n<   ProcedureDeclaration(\n<     main,\n<     Parameters(),\n<     Variables(\n<       VariableDeclaration(\n<         a,\n<         NamedTypeExpression(\n<           A))),\n<     Body(\n<       CallStatement(\n<         p,\n<         Arguments(\n<           VariableExpression(\n<             NamedVariable(\n<               a)))),\n<       CallStatement(\n<         exit,\n<         Arguments()))))\n---\n> NULL\n\\ No newline at end of file\n[2022-05-30 10:39:39.641008] Test not passed.\n[2022-05-30 10:39:39.641024] Running Score: 0/3\n\n[2022-05-30 10:39:39.641052] Evaluating assignment_without_semicolon.spl with the submitted solution.\n[2022-05-30 10:39:39.781450] Test subject results match (Compiler Failure).\n[2022-05-30 10:39:39.781488] Exit code matches the expected exit code (100).\n[2022-05-30 10:39:39.781523] Test passed.\n[2022-05-30 10:39:39.781538] Running Score: 1/4\n\n[2022-05-30 10:39:39.781561] Evaluating bigtest.spl with the submitted solution.\n[2022-05-30 10:39:39.935369] Test subject results match (Success).\n[2022-05-30 10:39:39.948622] Outputs differ. 'diff'-log (Expected output first, Limited to 50 lines/10000 characters):\n1,1513c1\n< Program(\n<   TypeDeclaration(\n<     myInt,\n<     NamedTypeExpression(\n<       int)),\n<   ProcedureDeclaration(\n<     callbyval,\n<     Parameters(\n<       ParameterDeclaration(\n<         x,\n<         NamedTypeExpression(\n<           int),\n<         false),\n<       ParameterDeclaration(\n<         y,\n<         NamedTypeExpression(\n<           myInt),\n<         false)),\n<     Variables(),\n<     Body(\n<       AssignStatement(\n<         NamedVariable(\n<           x),\n<         BinaryExpression(\n<           ADD,\n<           VariableExpression(\n<             NamedVariable(\n<               x)),\n<           IntLiteral(\n<             1))),\n<       AssignStatement(\n<         NamedVariable(\n<           y),\n<         BinaryExpression(\n<           ADD,\n<           VariableExpression(\n<             NamedVariable(\n<               y)),\n<           IntLiteral(\n<             1))))),\n<   TypeDeclaration(\n<     vektor,\n<     ArrayTypeExpression(\n<       NamedTypeExpression(\n<         myInt),\n<       10)),\n<   ProcedureDeclaration(\n<     callbyref,\n<     Parameters(\n[2022-05-30 10:39:39.948948] Test not passed.\n[2022-05-30 10:39:39.948965] Running Score: 1/5\n\n[2022-05-30 10:39:39.948994] Evaluating bits.spl with the submitted solution.\n[2022-05-30 10:39:40.090274] Test subject results match (Success).\n[2022-05-30 10:39:40.100067] Outputs differ. 'diff'-log (Expected output first, Limited to 50 lines/10000 characters):\n1,148c1\n< Program(\n<   ProcedureDeclaration(\n<     main,\n<     Parameters(),\n<     Variables(\n<       VariableDeclaration(\n<         arr,\n<         ArrayTypeExpression(\n<           NamedTypeExpression(\n<             int),\n<           32)),\n<       VariableDeclaration(\n<         eing,\n<         NamedTypeExpression(\n<           int)),\n<       VariableDeclaration(\n<         i,\n<         NamedTypeExpression(\n<           int))),\n<     Body(\n<       AssignStatement(\n<         NamedVariable(\n<           eing),\n<         IntLiteral(\n<           123456789)),\n<       AssignStatement(\n<         NamedVariable(\n<           i),\n<         IntLiteral(\n<           0)),\n<       WhileStatement(\n<         BinaryExpression(\n<           LST,\n<           VariableExpression(\n<             NamedVariable(\n<               i)),\n<           IntLiteral(\n<             32)),\n<         CompoundStatement(\n<           AssignStatement(\n<             ArrayAccess(\n<               NamedVariable(\n<                 arr),\n<               VariableExpression(\n<                 NamedVariable(\n<                   i))),\n<             BinaryExpression(\n<               SUB,\n<               VariableExpression(\n[2022-05-30 10:39:40.100391] Test not passed.\n[2022-05-30 10:39:40.100407] Running Score: 1/6\n\n[2022-05-30 10:39:40.100436] Evaluating call_without_semicolon.spl with the submitted solution.\n[2022-05-30 10:39:40.238320] Test subject results match (Compiler Failure).\n[2022-05-30 10:39:40.240074] Exit code matches the expected exit code (100).\n[2022-05-30 10:39:40.240129] Test passed.\n[2022-05-30 10:39:40.240146] Running Score: 2/7\n\n[2022-05-30 10:39:40.240170] Evaluating drawTest.spl with the submitted solution.\n[2022-05-30 10:39:40.394444] Test subject results match (Success).\n[2022-05-30 10:39:40.407307] Outputs differ. 'diff'-log (Expected output first, Limited to 50 lines/10000 characters):\n1,92c1\n< Program(\n<   ProcedureDeclaration(\n<     main,\n<     Parameters(),\n<     Variables(),\n<     Body(\n<       CallStatement(\n<         clearAll,\n<         Arguments(\n<           IntLiteral(\n<             0))),\n<       CallStatement(\n<         drawLine,\n<         Arguments(\n<           IntLiteral(\n<             0),\n<           IntLiteral(\n<             0),\n<           IntLiteral(\n<             639),\n<           IntLiteral(\n<             479),\n<           IntLiteral(\n<             16711935))),\n<       CallStatement(\n<         drawLine,\n<         Arguments(\n<           IntLiteral(\n<             0),\n<           IntLiteral(\n<             479),\n<           IntLiteral(\n<             639),\n<           IntLiteral(\n<             0),\n<           IntLiteral(\n<             16776960))),\n<       CallStatement(\n<         drawCircle,\n<         Arguments(\n<           IntLiteral(\n<             320),\n<           IntLiteral(\n<             240),\n<           IntLiteral(\n<             40),\n<           IntLiteral(\n<             65535))),\n<       CallStatement(\n[2022-05-30 10:39:40.407614] Test not passed.\n[2022-05-30 10:39:40.407629] Running Score: 2/8\n\n[2022-05-30 10:39:40.407659] Evaluating gcd.spl with the submitted solution.\n[2022-05-30 10:39:40.573325] Test subject results match (Success).\n[2022-05-30 10:39:40.585466] Outputs differ. 'diff'-log (Expected output first, Limited to 50 lines/10000 characters):\n1,142c1\n< Program(\n<   ProcedureDeclaration(\n<     main,\n<     Parameters(),\n<     Variables(\n<       VariableDeclaration(\n<         a,\n<         NamedTypeExpression(\n<           int)),\n<       VariableDeclaration(\n<         b,\n<         NamedTypeExpression(\n<           int)),\n<       VariableDeclaration(\n<         c,\n<         NamedTypeExpression(\n<           int))),\n<     Body(\n<       AssignStatement(\n<         NamedVariable(\n<           a),\n<         IntLiteral(\n<           10164)),\n<       AssignStatement(\n<         NamedVariable(\n<           b),\n<         IntLiteral(\n<           2646)),\n<       CallStatement(\n<         gcd,\n<         Arguments(\n<           VariableExpression(\n<             NamedVariable(\n<               a)),\n<           VariableExpression(\n<             NamedVariable(\n<               b)),\n<           VariableExpression(\n<             NamedVariable(\n<               c)))),\n<       CallStatement(\n<         printi,\n<         Arguments(\n<           VariableExpression(\n<             NamedVariable(\n<               a)))),\n<       CallStatement(\n<         printc,\n<         Arguments(\n[2022-05-30 10:39:40.585823] Test not passed.\n[2022-05-30 10:39:40.585843] Running Score: 2/9\n\n[2022-05-30 10:39:40.585929] Evaluating global_variable.spl with the submitted solution.\n[2022-05-30 10:39:40.754827] Test subject results match (Compiler Failure).\n[2022-05-30 10:39:40.754879] Exit code matches the expected exit code (100).\n[2022-05-30 10:39:40.754917] Test passed.\n[2022-05-30 10:39:40.754934] Running Score: 3/10\n\n[2022-05-30 10:39:40.754958] Evaluating lambda.spl with the submitted solution.\n[2022-05-30 10:39:40.912696] Test subject results match (Success).\n[2022-05-30 10:39:40.944269] Outputs differ. 'diff'-log (Expected output first, Limited to 50 lines/10000 characters):\n1,9461c1\n< Program(\n<   TypeDeclaration(\n<     LineBuffer,\n<     ArrayTypeExpression(\n<       NamedTypeExpression(\n<         int),\n<       4096)),\n<   TypeDeclaration(\n<     Term,\n<     ArrayTypeExpression(\n<       NamedTypeExpression(\n<         int),\n<       2)),\n<   TypeDeclaration(\n<     Memory,\n<     ArrayTypeExpression(\n<       NamedTypeExpression(\n<         Term),\n<       65535)),\n<   TypeDeclaration(\n<     DeBrujinEntry,\n<     ArrayTypeExpression(\n<       NamedTypeExpression(\n<         int),\n<       32)),\n<   TypeDeclaration(\n<     DeBrujinMap,\n<     ArrayTypeExpression(\n<       NamedTypeExpression(\n<         DeBrujinEntry),\n<       2048)),\n<   ProcedureDeclaration(\n<     printLine,\n<     Parameters(\n<       ParameterDeclaration(\n<         buffer,\n<         NamedTypeExpression(\n<           LineBuffer),\n<         true)),\n<     Variables(\n<       VariableDeclaration(\n<         i,\n<         NamedTypeExpression(\n<           int)),\n<       VariableDeclaration(\n<         continue,\n<         NamedTypeExpression(\n<           int))),\n<     Body(\n[2022-05-30 10:39:40.947359] Test not passed.\n[2022-05-30 10:39:40.947660] Running Score: 3/11\n\n[2022-05-30 10:39:40.947704] Evaluating multiply.spl with the submitted solution.\n[2022-05-30 10:39:41.096977] Test subject results match (Success).\n[2022-05-30 10:39:41.108060] Outputs differ. 'diff'-log (Expected output first, Limited to 50 lines/10000 characters):\n1,118c1\n< Program(\n<   ProcedureDeclaration(\n<     main,\n<     Parameters(),\n<     Variables(\n<       VariableDeclaration(\n<         i,\n<         NamedTypeExpression(\n<           int)),\n<       VariableDeclaration(\n<         j,\n<         NamedTypeExpression(\n<           int)),\n<       VariableDeclaration(\n<         n,\n<         NamedTypeExpression(\n<           int))),\n<     Body(\n<       AssignStatement(\n<         NamedVariable(\n<           n),\n<         IntLiteral(\n<           10)),\n<       AssignStatement(\n<         NamedVariable(\n<           i),\n<         IntLiteral(\n<           0)),\n<       WhileStatement(\n<         BinaryExpression(\n<           LSE,\n<           VariableExpression(\n<             NamedVariable(\n<               i)),\n<           VariableExpression(\n<             NamedVariable(\n<               n))),\n<         CompoundStatement(\n<           AssignStatement(\n<             NamedVariable(\n<               j),\n<             IntLiteral(\n<               0)),\n<           WhileStatement(\n<             BinaryExpression(\n<               LSE,\n<               VariableExpression(\n<                 NamedVariable(\n<                   j)),\n[2022-05-30 10:39:41.108374] Test not passed.\n[2022-05-30 10:39:41.108391] Running Score: 3/12\n\n[2022-05-30 10:39:41.108418] Evaluating partind1.spl with the submitted solution.\n[2022-05-30 10:39:41.250280] Test subject results match (Success).\n[2022-05-30 10:39:41.262874] Outputs differ. 'diff'-log (Expected output first, Limited to 50 lines/10000 characters):\n1,223c1\n< Program(\n<   TypeDeclaration(\n<     A,\n<     ArrayTypeExpression(\n<       NamedTypeExpression(\n<         int),\n<       7)),\n<   TypeDeclaration(\n<     B,\n<     ArrayTypeExpression(\n<       NamedTypeExpression(\n<         A),\n<       5)),\n<   ProcedureDeclaration(\n<     p,\n<     Parameters(\n<       ParameterDeclaration(\n<         x,\n<         NamedTypeExpression(\n<           A),\n<         true)),\n<     Variables(\n<       VariableDeclaration(\n<         i,\n<         NamedTypeExpression(\n<           int))),\n<     Body(\n<       AssignStatement(\n<         NamedVariable(\n<           i),\n<         IntLiteral(\n<           0)),\n<       WhileStatement(\n<         BinaryExpression(\n<           LST,\n<           VariableExpression(\n<             NamedVariable(\n<               i)),\n<           IntLiteral(\n<             7)),\n<         CompoundStatement(\n<           AssignStatement(\n<             ArrayAccess(\n<               NamedVariable(\n<                 x),\n<               VariableExpression(\n<                 NamedVariable(\n<                   i))),\n<             VariableExpression(\n[2022-05-30 10:39:41.263190] Test not passed.\n[2022-05-30 10:39:41.263290] Running Score: 3/13\n\n[2022-05-30 10:39:41.263341] Evaluating partind2.spl with the submitted solution.\n[2022-05-30 10:39:41.407265] Test subject results match (Success).\n[2022-05-30 10:39:41.421918] Outputs differ. 'diff'-log (Expected output first, Limited to 50 lines/10000 characters):\n1,341c1\n< Program(\n<   TypeDeclaration(\n<     A,\n<     ArrayTypeExpression(\n<       NamedTypeExpression(\n<         int),\n<       7)),\n<   TypeDeclaration(\n<     B,\n<     ArrayTypeExpression(\n<       NamedTypeExpression(\n<         A),\n<       5)),\n<   TypeDeclaration(\n<     C,\n<     ArrayTypeExpression(\n<       NamedTypeExpression(\n<         B),\n<       3)),\n<   ProcedureDeclaration(\n<     p,\n<     Parameters(\n<       ParameterDeclaration(\n<         x,\n<         NamedTypeExpression(\n<           B),\n<         true)),\n<     Variables(\n<       VariableDeclaration(\n<         i,\n<         NamedTypeExpression(\n<           int)),\n<       VariableDeclaration(\n<         j,\n<         NamedTypeExpression(\n<           int))),\n<     Body(\n<       AssignStatement(\n<         NamedVariable(\n<           i),\n<         IntLiteral(\n<           0)),\n<       WhileStatement(\n<         BinaryExpression(\n<           LST,\n<           VariableExpression(\n<             NamedVariable(\n<               i)),\n<           IntLiteral(\n[2022-05-30 10:39:41.422277] Test not passed.\n[2022-05-30 10:39:41.422299] Running Score: 3/14\n\n[2022-05-30 10:39:41.422328] Evaluating queens.spl with the submitted solution.\n[2022-05-30 10:39:41.574066] Test subject results match (Success).\n[2022-05-30 10:39:41.586310] Outputs differ. 'diff'-log (Expected output first, Limited to 50 lines/10000 characters):\n1,492c1\n< Program(\n<   TypeDeclaration(\n<     A8,\n<     ArrayTypeExpression(\n<       NamedTypeExpression(\n<         int),\n<       8)),\n<   TypeDeclaration(\n<     A15,\n<     ArrayTypeExpression(\n<       NamedTypeExpression(\n<         int),\n<       15)),\n<   ProcedureDeclaration(\n<     main,\n<     Parameters(),\n<     Variables(\n<       VariableDeclaration(\n<         row,\n<         NamedTypeExpression(\n<           A8)),\n<       VariableDeclaration(\n<         col,\n<         NamedTypeExpression(\n<           A8)),\n<       VariableDeclaration(\n<         diag1,\n<         NamedTypeExpression(\n<           A15)),\n<       VariableDeclaration(\n<         diag2,\n<         NamedTypeExpression(\n<           A15)),\n<       VariableDeclaration(\n<         i,\n<         NamedTypeExpression(\n<           int))),\n<     Body(\n<       AssignStatement(\n<         NamedVariable(\n<           i),\n<         IntLiteral(\n<           0)),\n<       WhileStatement(\n<         BinaryExpression(\n<           LST,\n<           VariableExpression(\n<             NamedVariable(\n<               i)),\n[2022-05-30 10:39:41.586629] Test not passed.\n[2022-05-30 10:39:41.586646] Running Score: 3/15\n\n[2022-05-30 10:39:41.586674] Evaluating reftest.spl with the submitted solution.\n[2022-05-30 10:39:41.753234] Test subject results match (Success).\n[2022-05-30 10:39:41.764244] Outputs differ. 'diff'-log (Expected output first, Limited to 50 lines/10000 characters):\n1,33c1\n< Program(\n<   ProcedureDeclaration(\n<     p,\n<     Parameters(\n<       ParameterDeclaration(\n<         x,\n<         NamedTypeExpression(\n<           int),\n<         true)),\n<     Variables(),\n<     Body()),\n<   ProcedureDeclaration(\n<     main,\n<     Parameters(),\n<     Variables(\n<       VariableDeclaration(\n<         a,\n<         NamedTypeExpression(\n<           int))),\n<     Body(\n<       CallStatement(\n<         p,\n<         Arguments(\n<           BinaryExpression(\n<             ADD,\n<             VariableExpression(\n<               NamedVariable(\n<                 a)),\n<             IntLiteral(\n<               1)))),\n<       CallStatement(\n<         exit,\n<         Arguments()))))\n---\n> NULL\n\\ No newline at end of file\n[2022-05-30 10:39:41.764498] Test not passed.\n[2022-05-30 10:39:41.764515] Running Score: 3/16\n\n[2022-05-30 10:39:41.764547] Evaluating sierpinski.spl with the submitted solution.\n[2022-05-30 10:39:41.911447] Test subject results match (Success).\n[2022-05-30 10:39:41.924522] Outputs differ. 'diff'-log (Expected output first, Limited to 50 lines/10000 characters):\n1,1567c1\n< Program(\n<   ProcedureDeclaration(\n<     plot,\n<     Parameters(\n<       ParameterDeclaration(\n<         px,\n<         NamedTypeExpression(\n<           int),\n<         true),\n<       ParameterDeclaration(\n<         py,\n<         NamedTypeExpression(\n<           int),\n<         true),\n<       ParameterDeclaration(\n<         x,\n<         NamedTypeExpression(\n<           int),\n<         false),\n<       ParameterDeclaration(\n<         y,\n<         NamedTypeExpression(\n<           int),\n<         false)),\n<     Variables(\n<       VariableDeclaration(\n<         fromCol,\n<         NamedTypeExpression(\n<           int)),\n<       VariableDeclaration(\n<         fromRow,\n<         NamedTypeExpression(\n<           int)),\n<       VariableDeclaration(\n<         toCol,\n<         NamedTypeExpression(\n<           int)),\n<       VariableDeclaration(\n<         toRow,\n<         NamedTypeExpression(\n<           int))),\n<     Body(\n<       AssignStatement(\n<         NamedVariable(\n<           fromCol),\n<         BinaryExpression(\n<           ADD,\n<           BinaryExpression(\n<             DIV,\n[2022-05-30 10:39:41.924845] Test not passed.\n[2022-05-30 10:39:41.924863] Running Score: 3/17\n\n[2022-05-30 10:39:41.924890] Evaluating swap.spl with the submitted solution.\n[2022-05-30 10:39:42.087946] Test subject results match (Success).\n[2022-05-30 10:39:42.099764] Outputs differ. 'diff'-log (Expected output first, Limited to 50 lines/10000 characters):\n1,117c1\n< Program(\n<   ProcedureDeclaration(\n<     swap,\n<     Parameters(\n<       ParameterDeclaration(\n<         n,\n<         NamedTypeExpression(\n<           int),\n<         true),\n<       ParameterDeclaration(\n<         m,\n<         NamedTypeExpression(\n<           int),\n<         true)),\n<     Variables(\n<       VariableDeclaration(\n<         k,\n<         NamedTypeExpression(\n<           int))),\n<     Body(\n<       AssignStatement(\n<         NamedVariable(\n<           k),\n<         VariableExpression(\n<           NamedVariable(\n<             n))),\n<       AssignStatement(\n<         NamedVariable(\n<           n),\n<         VariableExpression(\n<           NamedVariable(\n<             m))),\n<       AssignStatement(\n<         NamedVariable(\n<           m),\n<         VariableExpression(\n<           NamedVariable(\n<             k))))),\n<   ProcedureDeclaration(\n<     main,\n<     Parameters(),\n<     Variables(\n<       VariableDeclaration(\n<         i,\n<         NamedTypeExpression(\n<           int)),\n<       VariableDeclaration(\n<         j,\n<         NamedTypeExpression(\n[2022-05-30 10:39:42.100088] Test not passed.\n[2022-05-30 10:39:42.100109] Running Score: 3/18\n\n[2022-05-30 10:39:42.100139] Evaluating test1.spl with the submitted solution.\n[2022-05-30 10:39:42.245654] Test subject results match (Success).\n[2022-05-30 10:39:42.258104] Outputs differ. 'diff'-log (Expected output first, Limited to 50 lines/10000 characters):\n1,43c1\n< Program(\n<   ProcedureDeclaration(\n<     main,\n<     Parameters(),\n<     Variables(\n<       VariableDeclaration(\n<         x,\n<         NamedTypeExpression(\n<           int)),\n<       VariableDeclaration(\n<         y,\n<         NamedTypeExpression(\n<           int))),\n<     Body(\n<       AssignStatement(\n<         NamedVariable(\n<           x),\n<         IntLiteral(\n<           3)),\n<       AssignStatement(\n<         NamedVariable(\n<           y),\n<         IntLiteral(\n<           5)),\n<       CallStatement(\n<         printi,\n<         Arguments(\n<           BinaryExpression(\n<             ADD,\n<             VariableExpression(\n<               NamedVariable(\n<                 x)),\n<             VariableExpression(\n<               NamedVariable(\n<                 y))))),\n<       CallStatement(\n<         printc,\n<         Arguments(\n<           IntLiteral(\n<             10))),\n<       CallStatement(\n<         exit,\n<         Arguments()))))\n---\n> NULL\n\\ No newline at end of file\n[2022-05-30 10:39:42.258510] Test not passed.\n[2022-05-30 10:39:42.258534] Running Score: 3/19\n\n[2022-05-30 10:39:42.258563] Evaluating test2.spl with the submitted solution.\n[2022-05-30 10:39:42.402217] Test subject results match (Success).\n[2022-05-30 10:39:42.412270] Outputs differ. 'diff'-log (Expected output first, Limited to 50 lines/10000 characters):\n1,85c1\n< Program(\n<   ProcedureDeclaration(\n<     summe,\n<     Parameters(\n<       ParameterDeclaration(\n<         n,\n<         NamedTypeExpression(\n<           int),\n<         false),\n<       ParameterDeclaration(\n<         m,\n<         NamedTypeExpression(\n<           int),\n<         false),\n<       ParameterDeclaration(\n<         s,\n<         NamedTypeExpression(\n<           int),\n<         true)),\n<     Variables(),\n<     Body(\n<       AssignStatement(\n<         NamedVariable(\n<           s),\n<         BinaryExpression(\n<           ADD,\n<           VariableExpression(\n<             NamedVariable(\n<               n)),\n<           VariableExpression(\n<             NamedVariable(\n<               m)))))),\n<   ProcedureDeclaration(\n<     main,\n<     Parameters(),\n<     Variables(\n<       VariableDeclaration(\n<         x,\n<         NamedTypeExpression(\n<           int)),\n<       VariableDeclaration(\n<         y,\n<         NamedTypeExpression(\n<           int)),\n<       VariableDeclaration(\n<         s,\n<         NamedTypeExpression(\n<           int))),\n<     Body(\n[2022-05-30 10:39:42.414933] Test not passed.\n[2022-05-30 10:39:42.414961] Running Score: 3/20\n\n[2022-05-30 10:39:42.414990] Evaluating test3.spl with the submitted solution.\n[2022-05-30 10:39:42.559670] Test subject results match (Success).\n[2022-05-30 10:39:42.570838] Outputs differ. 'diff'-log (Expected output first, Limited to 50 lines/10000 characters):\n1,399c1\n< Program(\n<   TypeDeclaration(\n<     A,\n<     ArrayTypeExpression(\n<       NamedTypeExpression(\n<         int),\n<       10)),\n<   ProcedureDeclaration(\n<     sort,\n<     Parameters(\n<       ParameterDeclaration(\n<         a,\n<         NamedTypeExpression(\n<           A),\n<         true)),\n<     Variables(\n<       VariableDeclaration(\n<         i,\n<         NamedTypeExpression(\n<           int)),\n<       VariableDeclaration(\n<         j,\n<         NamedTypeExpression(\n<           int)),\n<       VariableDeclaration(\n<         t,\n<         NamedTypeExpression(\n<           int))),\n<     Body(\n<       AssignStatement(\n<         NamedVariable(\n<           i),\n<         IntLiteral(\n<           9)),\n<       WhileStatement(\n<         BinaryExpression(\n<           GRE,\n<           VariableExpression(\n<             NamedVariable(\n<               i)),\n<           IntLiteral(\n<             0)),\n<         CompoundStatement(\n<           AssignStatement(\n<             NamedVariable(\n<               j),\n<             IntLiteral(\n<               1)),\n<           WhileStatement(\n[2022-05-30 10:39:42.571189] Test not passed.\n[2022-05-30 10:39:42.571360] Running Score: 3/21\n\n[2022-05-30 10:39:42.571400] Evaluating test4.spl with the submitted solution.\n[2022-05-30 10:39:42.724968] Test subject results match (Success).\n[2022-05-30 10:39:42.736122] Outputs differ. 'diff'-log (Expected output first, Limited to 50 lines/10000 characters):\n1,166c1\n< Program(\n<   ProcedureDeclaration(\n<     fak1,\n<     Parameters(\n<       ParameterDeclaration(\n<         n,\n<         NamedTypeExpression(\n<           int),\n<         false),\n<       ParameterDeclaration(\n<         m,\n<         NamedTypeExpression(\n<           int),\n<         true)),\n<     Variables(),\n<     Body(\n<       AssignStatement(\n<         NamedVariable(\n<           m),\n<         IntLiteral(\n<           1)),\n<       WhileStatement(\n<         BinaryExpression(\n<           NEQ,\n<           VariableExpression(\n<             NamedVariable(\n<               n)),\n<           IntLiteral(\n<             0)),\n<         CompoundStatement(\n<           AssignStatement(\n<             NamedVariable(\n<               m),\n<             BinaryExpression(\n<               MUL,\n<               VariableExpression(\n<                 NamedVariable(\n<                   m)),\n<               VariableExpression(\n<                 NamedVariable(\n<                   n)))),\n<           AssignStatement(\n<             NamedVariable(\n<               n),\n<             BinaryExpression(\n<               SUB,\n<               VariableExpression(\n<                 NamedVariable(\n<                   n)),\n[2022-05-30 10:39:42.736464] Test not passed.\n[2022-05-30 10:39:42.736486] Running Score: 3/22\n\n[2022-05-30 10:39:42.736516] Evaluating test5.spl with the submitted solution.\n[2022-05-30 10:39:42.880867] Test subject results match (Success).\n[2022-05-30 10:39:42.891321] Outputs differ. 'diff'-log (Expected output first, Limited to 50 lines/10000 characters):\n1,105c1\n< Program(\n<   ProcedureDeclaration(\n<     main,\n<     Parameters(),\n<     Variables(\n<       VariableDeclaration(\n<         i,\n<         NamedTypeExpression(\n<           int))),\n<     Body(\n<       AssignStatement(\n<         NamedVariable(\n<           i),\n<         IntLiteral(\n<           2)),\n<       AssignStatement(\n<         NamedVariable(\n<           i),\n<         BinaryExpression(\n<           ADD,\n<           VariableExpression(\n<             NamedVariable(\n<               i)),\n<           BinaryExpression(\n<             ADD,\n<             VariableExpression(\n<               NamedVariable(\n<                 i)),\n<             BinaryExpression(\n<               ADD,\n<               VariableExpression(\n<                 NamedVariable(\n<                   i)),\n<               BinaryExpression(\n<                 ADD,\n<                 VariableExpression(\n<                   NamedVariable(\n<                     i)),\n<                 BinaryExpression(\n<                   ADD,\n<                   VariableExpression(\n<                     NamedVariable(\n<                       i)),\n<                   BinaryExpression(\n<                     ADD,\n<                     VariableExpression(\n<                       NamedVariable(\n<                         i)),\n<                     BinaryExpression(\n[2022-05-30 10:39:42.891631] Test not passed.\n[2022-05-30 10:39:42.891647] Running Score: 3/23\n\n[2022-05-30 10:39:42.891679] Evaluating test6.spl with the submitted solution.\n[2022-05-30 10:39:43.037947] Test subject results match (Success).\n[2022-05-30 10:39:43.048291] Outputs differ. 'diff'-log (Expected output first, Limited to 50 lines/10000 characters):\n1,110c1\n< Program(\n<   ProcedureDeclaration(\n<     main,\n<     Parameters(),\n<     Variables(\n<       VariableDeclaration(\n<         i,\n<         NamedTypeExpression(\n<           int))),\n<     Body(\n<       AssignStatement(\n<         NamedVariable(\n<           i),\n<         IntLiteral(\n<           2)),\n<       AssignStatement(\n<         NamedVariable(\n<           i),\n<         BinaryExpression(\n<           ADD,\n<           VariableExpression(\n<             NamedVariable(\n<               i)),\n<           BinaryExpression(\n<             ADD,\n<             VariableExpression(\n<               NamedVariable(\n<                 i)),\n<             BinaryExpression(\n<               ADD,\n<               VariableExpression(\n<                 NamedVariable(\n<                   i)),\n<               BinaryExpression(\n<                 ADD,\n<                 VariableExpression(\n<                   NamedVariable(\n<                     i)),\n<                 BinaryExpression(\n<                   ADD,\n<                   VariableExpression(\n<                     NamedVariable(\n<                       i)),\n<                   BinaryExpression(\n<                     ADD,\n<                     VariableExpression(\n<                       NamedVariable(\n<                         i)),\n<                     BinaryExpression(\n[2022-05-30 10:39:43.048613] Test not passed.\n[2022-05-30 10:39:43.048751] Running Score: 3/24\n\n[2022-05-30 10:39:43.049056] Evaluating test7.spl with the submitted solution.\n[2022-05-30 10:39:43.210019] Test subject results match (Success).\n[2022-05-30 10:39:43.221672] Outputs differ. 'diff'-log (Expected output first, Limited to 50 lines/10000 characters):\n1,54c1\n< Program(\n<   ProcedureDeclaration(\n<     main,\n<     Parameters(),\n<     Variables(\n<       VariableDeclaration(\n<         a,\n<         ArrayTypeExpression(\n<           NamedTypeExpression(\n<             int),\n<           3))),\n<     Body(\n<       AssignStatement(\n<         ArrayAccess(\n<           NamedVariable(\n<             a),\n<           IntLiteral(\n<             0)),\n<         IntLiteral(\n<           10)),\n<       AssignStatement(\n<         ArrayAccess(\n<           NamedVariable(\n<             a),\n<           IntLiteral(\n<             1)),\n<         IntLiteral(\n<           11)),\n<       AssignStatement(\n<         ArrayAccess(\n<           NamedVariable(\n<             a),\n<           IntLiteral(\n<             2)),\n<         IntLiteral(\n<           12)),\n<       CallStatement(\n<         printc,\n<         Arguments(\n<           IntLiteral(\n<             111))),\n<       CallStatement(\n<         printc,\n<         Arguments(\n<           IntLiteral(\n<             107))),\n<       CallStatement(\n<         printc,\n<         Arguments(\n[2022-05-30 10:39:43.221985] Test not passed.\n[2022-05-30 10:39:43.222002] Running Score: 3/25\n\n[2022-05-30 10:39:43.222030] Evaluating test8.spl with the submitted solution.\n[2022-05-30 10:39:43.371420] Test subject results match (Success).\n[2022-05-30 10:39:43.384264] Outputs differ. 'diff'-log (Expected output first, Limited to 50 lines/10000 characters):\n1,66c1\n< Program(\n<   ProcedureDeclaration(\n<     main,\n<     Parameters(),\n<     Variables(\n<       VariableDeclaration(\n<         a,\n<         ArrayTypeExpression(\n<           NamedTypeExpression(\n<             int),\n<           3))),\n<     Body(\n<       AssignStatement(\n<         ArrayAccess(\n<           NamedVariable(\n<             a),\n<           BinaryExpression(\n<             SUB,\n<             IntLiteral(\n<               0),\n<             IntLiteral(\n<               1))),\n<         IntLiteral(\n<           9)),\n<       AssignStatement(\n<         ArrayAccess(\n<           NamedVariable(\n<             a),\n<           IntLiteral(\n<             0)),\n<         IntLiteral(\n<           10)),\n<       AssignStatement(\n<         ArrayAccess(\n<           NamedVariable(\n<             a),\n<           IntLiteral(\n<             1)),\n<         IntLiteral(\n<           11)),\n<       AssignStatement(\n<         ArrayAccess(\n<           NamedVariable(\n<             a),\n<           IntLiteral(\n<             2)),\n<         IntLiteral(\n<           12)),\n<       CallStatement(\n[2022-05-30 10:39:43.384591] Test not passed.\n[2022-05-30 10:39:43.384609] Running Score: 3/26\n\n[2022-05-30 10:39:43.384639] Evaluating test9.spl with the submitted solution.\n[2022-05-30 10:39:43.528885] Test subject results match (Success).\n[2022-05-30 10:39:43.540386] Outputs differ. 'diff'-log (Expected output first, Limited to 50 lines/10000 characters):\n1,62c1\n< Program(\n<   ProcedureDeclaration(\n<     main,\n<     Parameters(),\n<     Variables(\n<       VariableDeclaration(\n<         a,\n<         ArrayTypeExpression(\n<           NamedTypeExpression(\n<             int),\n<           3))),\n<     Body(\n<       AssignStatement(\n<         ArrayAccess(\n<           NamedVariable(\n<             a),\n<           IntLiteral(\n<             0)),\n<         IntLiteral(\n<           10)),\n<       AssignStatement(\n<         ArrayAccess(\n<           NamedVariable(\n<             a),\n<           IntLiteral(\n<             1)),\n<         IntLiteral(\n<           11)),\n<       AssignStatement(\n<         ArrayAccess(\n<           NamedVariable(\n<             a),\n<           IntLiteral(\n<             2)),\n<         IntLiteral(\n<           12)),\n<       AssignStatement(\n<         ArrayAccess(\n<           NamedVariable(\n<             a),\n<           IntLiteral(\n<             3)),\n<         IntLiteral(\n<           13)),\n<       CallStatement(\n<         printc,\n<         Arguments(\n<           IntLiteral(\n<             111))),\n[2022-05-30 10:39:43.540721] Test not passed.\n[2022-05-30 10:39:43.540742] Running Score: 3/27\n\n[2022-05-30 10:39:43.540774] Evaluating threedim.spl with the submitted solution.\n[2022-05-30 10:39:43.690634] Test subject results match (Success).\n[2022-05-30 10:39:43.702653] Outputs differ. 'diff'-log (Expected output first, Limited to 50 lines/10000 characters):\n1,288c1\n< Program(\n<   TypeDeclaration(\n<     V,\n<     ArrayTypeExpression(\n<       NamedTypeExpression(\n<         int),\n<       5)),\n<   TypeDeclaration(\n<     M,\n<     ArrayTypeExpression(\n<       NamedTypeExpression(\n<         V),\n<       5)),\n<   TypeDeclaration(\n<     A,\n<     ArrayTypeExpression(\n<       NamedTypeExpression(\n<         M),\n<       5)),\n<   ProcedureDeclaration(\n<     main,\n<     Parameters(),\n<     Variables(\n<       VariableDeclaration(\n<         a,\n<         NamedTypeExpression(\n<           A)),\n<       VariableDeclaration(\n<         i,\n<         NamedTypeExpression(\n<           int)),\n<       VariableDeclaration(\n<         j,\n<         NamedTypeExpression(\n<           int)),\n<       VariableDeclaration(\n<         k,\n<         NamedTypeExpression(\n<           int))),\n<     Body(\n<       AssignStatement(\n<         NamedVariable(\n<           i),\n<         IntLiteral(\n<           0)),\n<       WhileStatement(\n<         BinaryExpression(\n<           LST,\n<           VariableExpression(\n[2022-05-30 10:39:43.703068] Test not passed.\n[2022-05-30 10:39:43.703091] Running Score: 3/28\n\n[2022-05-30 10:39:43.703119] Evaluating time.spl with the submitted solution.\n[2022-05-30 10:39:43.847829] Test subject results match (Success).\n[2022-05-30 10:39:43.859549] Outputs differ. 'diff'-log (Expected output first, Limited to 50 lines/10000 characters):\n1,95c1\n< Program(\n<   ProcedureDeclaration(\n<     main,\n<     Parameters(),\n<     Variables(\n<       VariableDeclaration(\n<         s,\n<         NamedTypeExpression(\n<           int)),\n<       VariableDeclaration(\n<         t,\n<         NamedTypeExpression(\n<           int))),\n<     Body(\n<       AssignStatement(\n<         NamedVariable(\n<           s),\n<         IntLiteral(\n<           0)),\n<       WhileStatement(\n<         BinaryExpression(\n<           LST,\n<           VariableExpression(\n<             NamedVariable(\n<               s)),\n<           IntLiteral(\n<             10)),\n<         CompoundStatement(\n<           CallStatement(\n<             time,\n<             Arguments(\n<               VariableExpression(\n<                 NamedVariable(\n<                   t)))),\n<           IfStatement(\n<             BinaryExpression(\n<               NEQ,\n<               VariableExpression(\n<                 NamedVariable(\n<                   s)),\n<               VariableExpression(\n<                 NamedVariable(\n<                   t))),\n<             CompoundStatement(\n<               CallStatement(\n<                 printc,\n<                 Arguments(\n<                   IntLiteral(\n<                     116))),\n[2022-05-30 10:39:43.859866] Test not passed.\n[2022-05-30 10:39:43.859970] Running Score: 3/29\n\n[2022-05-30 10:39:43.860017] Evaluating trailing_argument_comma.spl with the submitted solution.\n[2022-05-30 10:39:44.016386] Test subject results match (Compiler Failure).\n[2022-05-30 10:39:44.016442] Exit code matches the expected exit code (100).\n[2022-05-30 10:39:44.016484] Test passed.\n[2022-05-30 10:39:44.016507] Running Score: 4/30\n\n[2022-05-30 10:39:44.016539] Evaluating trailing_parameter_comma.spl with the submitted solution.\n[2022-05-30 10:39:44.167929] Test subject results match (Compiler Failure).\n[2022-05-30 10:39:44.167973] Exit code matches the expected exit code (100).\n[2022-05-30 10:39:44.168005] Test passed.\n[2022-05-30 10:39:44.168023] Running Score: 5/31\n\n[2022-05-30 10:39:44.168045] Evaluating twodim.spl with the submitted solution.\n[2022-05-30 10:39:44.390790] Test subject results match (Success).\n[2022-05-30 10:39:44.401459] Outputs differ. 'diff'-log (Expected output first, Limited to 50 lines/10000 characters):\n1,181c1\n< Program(\n<   TypeDeclaration(\n<     A,\n<     ArrayTypeExpression(\n<       ArrayTypeExpression(\n<         NamedTypeExpression(\n<           int),\n<         5),\n<       5)),\n<   ProcedureDeclaration(\n<     main,\n<     Parameters(),\n<     Variables(\n<       VariableDeclaration(\n<         a,\n<         NamedTypeExpression(\n<           A)),\n<       VariableDeclaration(\n<         i,\n<         NamedTypeExpression(\n<           int)),\n<       VariableDeclaration(\n<         j,\n<         NamedTypeExpression(\n<           int))),\n<     Body(\n<       AssignStatement(\n<         NamedVariable(\n<           i),\n<         IntLiteral(\n<           0)),\n<       WhileStatement(\n<         BinaryExpression(\n<           LST,\n<           VariableExpression(\n<             NamedVariable(\n<               i)),\n<           IntLiteral(\n<             5)),\n<         CompoundStatement(\n<           AssignStatement(\n<             NamedVariable(\n<               j),\n<             IntLiteral(\n<               0)),\n<           WhileStatement(\n<             BinaryExpression(\n<               LST,\n<               VariableExpression(\n[2022-05-30 10:39:44.401779] Test not passed.\n[2022-05-30 10:39:44.401797] Running Score: 5/32\n\n[2022-05-30 10:39:44.401825] Evaluating unary_plus.spl with the submitted solution.\n[2022-05-30 10:39:44.544774] Test subject results match (Compiler Failure).\n[2022-05-30 10:39:44.544817] Exit code matches the expected exit code (100).\n[2022-05-30 10:39:44.544846] Test passed.\n[2022-05-30 10:39:44.544862] Running Score: 6/33\n\n[2022-05-30 10:39:44.544961] Final score: 6/33 (18%). \n[2022-05-30 10:39:44.545089] 100% are needed to pass.\n[2022-05-30 10:39:44.742171] You have NOT PASSED this assignment.\n[2022-05-30 10:39:44.742520] You can try again. Deadline: 12.06.2022 23:59\n",
        "max_score": 33,
        "passed": false,
        "score": 6
    },
    "id": "2fde1406-cfe7-462b-ad2d-7ec86a1d7ab2",
    "timestamp_ns": 1653899974682952914,
    "upload_log": "[2022-05-30 10:39:34.683816] Received submission 2fde1406-cfe7-462b-ad2d-7ec86a1d7ab2\n[2022-05-30 10:39:34.684527] Ip: 10.192.106.83\n[2022-05-30 10:39:34.684776] Team members: [('Antariksa', 'Najmi', '5311215'), ('Ahadriu', 'Hicham', '5337972')]\n[2022-05-30 10:39:34.700282] Your submission was ACCEPTED for course 'Compilerbau-ss22', assignment 'Aufgabe-1'.\n[2022-05-30 10:39:34.700517] Your submission has the id 2fde1406-cfe7-462b-ad2d-7ec86a1d7ab2.\n[2022-05-30 10:39:34.701092] It will be evaluated shortly. Please check back soon for your results.\n\n"
}
